# -*- coding: utf-8 -*-
"""Linear Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kTSzOlmH1wjc71NF2HCL8UVoNOueTgig

[link text](https://)
### Linear Regression

####**Problem Statement**
Real estate companies often need to estimate rental prices based on apartment size. This helps potential renters gauge the affordability of an apartment based on their needs. Using a linear regression model, you will predict the monthly_rent of an apartment based solely on its square_footage.

####**How the Model Will Help**
This model can provide a quick and efficient way to estimate rent prices, which can help real estate agents, landlords, and renters make informed decisions without manually comparing numerous listings.

####**Data Description**
The dataset contains two columns:
- square_footage: The size of the apartment in square feet.
- monthly_rent: The monthly rental price in dollars.

#### **Instructions**
- Load the dataset and observe the relationship between square_footage and monthly_rent using a scatter plot.
- Determine whether scaling the square_footage feature is necessary, based on its range.
- Split the data into training (80%) and testing (20%) sets.
- Train a simple linear regression model using square_footage to predict monthly_rent.
- Plot the regression line against the data points for visualization.
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv("Home Prices data.csv")

df.head()

X = dataset.iloc[:,:-1].values
y = dataset.iloc[:, -1].values

"""# Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=1/3, random_state=0)

"""# Training the Simple Linear Regression model on the Training set

"""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train)

"""# Predicting the Test set results"""

y_pred = regressor.predict(X_test)

"""# Visualising the Training set results"""

plt.scatter(X_train, y_train, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('House Prices Prediction (Training set)')
plt.xlabel('Square_footage')
plt.ylabel('Monthly_rent')
plt.show()

